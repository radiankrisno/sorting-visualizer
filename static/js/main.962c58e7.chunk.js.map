{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["QuickSortAnimations","array","animations","length","Quick_Sort","arr","f","l","pos","temp","i","j","push","Partition","MergeSortAnimations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","barNumbers","window","innerWidth","height","innerHeight","SortingVisualizer","props","state","value","buttons","this","resetArray","min","max","random","setState","document","getElementById","disabled","removeAttribute","BubbleSortAnimations","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","restoreButtons","temp2","SelectionSortAnimations","InsertionSortAnimations","className","id","onClick","bubbleSort","disableButtons","selectionSort","insertionSort","quickSort","mergeSort","map","idx","key","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.962c58e7.chunk.js","sourcesContent":["//BUBBLE SORT ALGORITHM \r\nexport function BubbleSortAnimations(array) {\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    for(let i = 0; i < array.length; i++){\r\n        for(let j = 0; j < array.length-i-1; j++){\r\n            animations.push([j, j+1]);\r\n            animations.push([j, j+1]);\r\n            if(array[j] > array[j+1]){\r\n                animations.push([j, array[j+1]]);\r\n                animations.push([j+1, array[j]]);\r\n                let temp = array[j];\r\n                array[j] = array[j+1];\r\n                array[j+1] = temp;\r\n            } else{\r\n                animations.push([j, array[j]]);\r\n                animations.push([j+1, array[j+1]]);\r\n            }\r\n        }\r\n    }\r\n    return animations;\r\n}\r\n\r\n//SELECTION SORT ALGORITHM\r\nexport function SelectionSortAnimations(array) {\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    for(let i = 0; i < array.length; i++){\r\n        let temp = array.length-i-1;\r\n        for(let j = 0; j < array.length-i-1; j++){\r\n            animations.push([true, j, temp])\r\n            animations.push([true, j, temp])\r\n            if(array[j] > array[temp]){\r\n                temp = j;\r\n            }\r\n        }\r\n        animations.push([false, temp, array[array.length-i-1]]);\r\n        animations.push([false, array.length-i-1, array[temp]]);\r\n        let temp2 = array[temp];\r\n        array[temp] = array[array.length-i-1];\r\n        array[array.length-i-1] = temp2;\r\n    }\r\n    return animations;\r\n}\r\n\r\n//INSERTION SORT ALGORITHM\r\nexport function InsertionSortAnimations(array) {\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    let temp, j, temp2;\r\n    for(let i = 1; i < array.length; i++){\r\n        temp = i;\r\n        j = i - 1;\r\n        while(array[temp] < array[j] && j >= 0){\r\n            animations.push([true, temp, j]);\r\n            animations.push([true, temp, j]);\r\n            animations.push([false, temp, array[j]]);\r\n            animations.push([false, j, array[temp]]);\r\n            temp2 = array[j];\r\n            array[j] = array[temp];\r\n            array[temp] = temp2;\r\n            temp--;\r\n            j--;\r\n        }\r\n    }\r\n    return animations;\r\n}\r\n\r\n//QUICK SORT ALGORITHM\r\nexport function QuickSortAnimations(array){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    let f = 0, l = array.length-1;\r\n    Quick_Sort(array, f, l, animations);\r\n    return animations;\r\n}\r\n\r\nfunction Quick_Sort(arr, f, l, animations){\r\n    if(f >= l){\r\n        return;\r\n    }\r\n    let pos = Partition(arr, f, l, animations);\r\n    Quick_Sort(arr, f, pos-1, animations);\r\n    Quick_Sort(arr, pos+1, l, animations);\r\n}\r\n\r\nfunction Partition(arr, f, l, animations){\r\n    let i = f, pos = f, j = l, temp;\r\n    while(true){\r\n        while(arr[pos] <= arr[j]){\r\n            animations.push([true, pos, j]);\r\n            animations.push([true, pos, j]);\r\n            j--;\r\n            if(pos === j){\r\n                return pos;\r\n            }\r\n        }\r\n        animations.push([false, j, arr[pos]]);\r\n        animations.push([false, pos, arr[j]]);\r\n        temp = arr[pos];\r\n        arr[pos] = arr[j];\r\n        arr[j] = temp;\r\n        pos = j;\r\n        while(arr[pos] >= arr[i]){\r\n            animations.push([true, pos, i]);\r\n            animations.push([true, pos, i]);\r\n            i++;\r\n            if(pos === i){\r\n                return pos;\r\n            }\r\n        }\r\n        animations.push([false, i, arr[pos]]);\r\n        animations.push([false, pos, arr[i]]);\r\n        temp = arr[pos];\r\n        arr[pos] = arr[i];\r\n        arr[i] = temp;\r\n        pos = i;\r\n    }\r\n}\r\n\r\n//MERGE SORT ALGORITHM\r\nexport function MergeSortAnimations(array) {\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n}\r\n  \r\nfunction mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n  \r\nfunction doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n            animations.push([k, auxiliaryArray[i]]);\r\n            mainArray[k++] = auxiliaryArray[i++];\r\n        } else {\r\n            animations.push([k, auxiliaryArray[j]]);\r\n            mainArray[k++] = auxiliaryArray[j++];\r\n        }\r\n      }\r\n    while (i <= middleIdx) {\r\n        animations.push([i, i]);\r\n        animations.push([i, i]);\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n        animations.push([j, j]);\r\n        animations.push([j, j]);\r\n        animations.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n\r\n","import React, { useState } from \"react\";\r\nimport {BubbleSortAnimations, SelectionSortAnimations, InsertionSortAnimations, QuickSortAnimations, MergeSortAnimations} from \"../SortingAlgorithms/SortingAlgorithms.js\"\r\nimport \"./SortingVisualizer.css\";\r\n\r\nconst animationSpeed = 1;\r\n\r\nconst barNumbers = Math.floor(window.innerWidth / 10);\r\n\r\nconst height = window.innerHeight - 50;\r\n\r\nconst primary = \"#4285F4\";\r\n\r\nconst secondary = \"#DE5246\";\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            value: false,\r\n            buttons: [\"reset\", \"bubble\", \"selection\", \"insertion\", \"quick\", \"merge\"],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray(){\r\n        const array = [];\r\n        for(let i = 0; i < barNumbers; i++){\r\n            array.push(randomIntFromInterval(5, height));\r\n        }\r\n        array.push(height);\r\n        this.setState({array: array});\r\n    }\r\n\r\n    disableButtons(){\r\n        const array = this.state.buttons;\r\n        for(let i = 0; i < array.length; i++){\r\n            document.getElementById(array[i]).disabled = true;\r\n        }\r\n    }\r\n\r\n    restoreButtons(){\r\n        const array = this.state.buttons;\r\n        for(let i = 0; i < array.length; i++){\r\n            document.getElementById(array[i]).removeAttribute(\"disabled\");\r\n        }\r\n    }\r\n\r\n    bubbleSort(){\r\n        const animations = BubbleSortAnimations(this.state.array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 4 !== 2 && i % 4 !== 3;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 4 === 0 ? secondary : primary;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeed);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeed);\r\n            }\r\n        }\r\n        setTimeout(() => this.restoreButtons(), animations.length * animationSpeed);\r\n    }\r\n\r\n    selectionSort(){\r\n        const animations = SelectionSortAnimations(this.state.array);\r\n        let color = secondary;\r\n        for(let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][0];\r\n            if (isColorChange) {\r\n                const [flag, barOneIdx, barTwoIdx] = animations[i]\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                    color = color === secondary ? primary : secondary;\r\n                }, i * animationSpeed);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [flag, barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeed);\r\n            }\r\n        }\r\n        setTimeout(() => this.restoreButtons(), animations.length * animationSpeed);\r\n    }\r\n\r\n    insertionSort(){\r\n        const animations = InsertionSortAnimations(this.state.array);\r\n        let color = secondary;\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][0];\r\n            if (isColorChange) {\r\n                const [flag, barOneIdx, barTwoIdx] = animations[i]\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                    color = color === secondary ? primary : secondary;\r\n                }, i * animationSpeed);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [flag, barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeed);\r\n            }\r\n        }\r\n        setTimeout(() => this.restoreButtons(), animations.length * animationSpeed);\r\n    }\r\n\r\n    quickSort(){\r\n        const animations = QuickSortAnimations(this.state.array);\r\n        let color = secondary;\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = animations[i][0];\r\n            if (isColorChange) {\r\n                const [flag, barOneIdx, barTwoIdx] = animations[i]\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                    color = color === secondary ? primary : secondary;\r\n                }, i * animationSpeed);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [flag, barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeed);\r\n            }\r\n        }\r\n        setTimeout(() => this.restoreButtons(), animations.length * animationSpeed);\r\n    }\r\n\r\n    mergeSort(){\r\n        const animations = MergeSortAnimations(this.state.array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? secondary : primary;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeed);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeed);\r\n            }\r\n        }\r\n        setTimeout(() => this.restoreButtons(), animations.length * animationSpeed);\r\n    }\r\n\r\n    render(){\r\n        const array = this.state.array;\r\n        return(\r\n            <div className=\"array-container\">\r\n                <div id=\"top\">\r\n                    <div>\r\n                        <button id=\"reset\" onClick={() => this.resetArray()}>Generate New Array</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"bubble\" onClick={() => {this.bubbleSort(); this.disableButtons();}}>Bubble Sort</button>\r\n                        <button id=\"selection\" onClick={() => {this.selectionSort(); this.disableButtons();}}>Selection Sort</button>\r\n                        <button id=\"insertion\" onClick={() => {this.insertionSort(); this.disableButtons();}}>Insertion Sort</button>\r\n                        <button id=\"quick\" onClick={() => {this.quickSort(); this.disableButtons();}}>Quick Sort</button>\r\n                        <button id=\"merge\" onClick={() => {this.mergeSort(); this.disableButtons();}}>Merge Sort</button>\r\n                    </div>\r\n                </div>\r\n                    {array.map((value, idx) => (\r\n                    <div\r\n                        className=\"array-bar\"\r\n                        key={idx}\r\n                        style={{\r\n                        backgroundColor: primary,\r\n                        height: `${value}px`,\r\n                    }}></div>\r\n                ))}    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction randomIntFromInterval(min, max){\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}","import React from 'react';\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}